"""
Django settings for api project.

Generated by 'django-admin startproject' using Django 3.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'zk8e+tdabt%tt25p_gjt2%80h_)g)*-*scmdf4zuj#2@6+bltx'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'product.apps.ProductConfig',
    'stores.apps.StoresConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'api.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'api.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'

# Currencies used

CURRENCY = {
    'CAD': ('01', 'Canadian Dollar'),
    'EUR': ('02', 'Euro'),
    'USD': ('03', 'US Dollar')
}

# products sizes
PRODUCT_SIZES = {
    'UNKNOWN': ('00', 'Unknown'),
    'XS': ('01', 'XS'),
    'S': ('02', 'S'),
    'M': ('03', 'M'),
    'L': ('04', 'L'),
    'XL': ('05', 'XL'),
    'XXL': ('06', 'XXL'),
}

# ecommerce platforms api settings
# we will add more as we integrate new platforms
PLATFORMS = {
    'WOOCOMMERCE': ('01', 'WOOCOMMERCE'),
    'SHOPIFY': ('02', 'SHOPIFY'),
}

# insert real credentials over here for woocomerce and shopify to test
PLATFORMS_API_SETTINGS = {
    PLATFORMS['WOOCOMMERCE'][1]: {
        'consumer_key': 'TEST_CONSUMER_KEY',
        'consumer_secret': 'TEST_CONSUMER_SECRET',
        'wp_api': True,
        'version': 'wc/v3'
    },
    PLATFORMS['SHOPIFY'][1]: {
        'apikey': 'apikey',
        'password': 'TEST_CONSUMER_SECRET',
        'storeaddress': 'STORE_ADDRESS',
    },
}

PLATFORMS_FIELDS_MAPPING = {
    PLATFORMS['WOOCOMMERCE'][1]: {
        'name': 'name',
        'price': 'price',
        'stock': 'stock_quantity',
        'external_id': 'id'
    },
    PLATFORMS['SHOPIFY'][1]: {
        'name': 'title',
        'price': 'price',
        'stock': 'sku',
        'external_id': 'id'
    }
}
